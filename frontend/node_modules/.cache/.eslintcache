[{"/Users/ryantanenholz/Desktop/ArcZero/frontend/src/API.js":"1","/Users/ryantanenholz/Desktop/ArcZero/frontend/src/App.js":"2","/Users/ryantanenholz/Desktop/ArcZero/frontend/src/Offline.js":"3","/Users/ryantanenholz/Desktop/ArcZero/frontend/src/Team.js":"4"},{"size":1290,"mtime":1650634243461,"results":"5","hashOfConfig":"6"},{"size":1164,"mtime":1650634206077,"results":"7","hashOfConfig":"6"},{"size":397,"mtime":1650633852076,"results":"8","hashOfConfig":"6"},{"size":2081,"mtime":1650650156723,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"14"},"rsft6z",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"/Users/ryantanenholz/Desktop/ArcZero/frontend/src/API.js",["26","27"],[],"const APIBASE = 'http://localhost:3001';\nconst fetchTeams = async () => {\n  const response = await fetch(APIBASE + '/teams');\n  const json = await response.json();\n  return json;\n};\nexport const ping = async () => {\n  try  {\n    const response = await fetch(APIBASE + '/ping');\n    const json = await response.text();\n    return true;\n  } catch(err) {\n    // console.log(err)\n    return false;\n  }\n  return true;\n}\nexport const fetchPlayers = async () => {\n  const response = await fetch(APIBASE + '/players');\n  const json = await response.json();\n\n  return json;\n};\nexport const getTeamFromUUID = async (uuid) => {\n  const response = await fetch(APIBASE + '/teams/' + uuid);\n  const json = await response.json();\n  return json;\n};\nexport const getTeamByLeague = async () => {\n  const data = await fetchTeams();\n  let teamByLeague = {};\n  data.forEach((element, i) => {\n    console.log(i);\n    const prop = element.league + ' S' + element.season;\n    if (teamByLeague.hasOwnProperty(prop)) {\n      teamByLeague[prop].push(element);\n    } else {\n      teamByLeague[prop] = [element];\n    }\n  });\n  // const ordered = Object.keys(teamByLeague)\n  //   .sort()\n  //   .reduce((obj, key) => {\n  //     obj[key] = teamByLeague[key];\n  //     return obj;\n  //   }, {});\n  return teamByLeague;\n};\n",[],"/Users/ryantanenholz/Desktop/ArcZero/frontend/src/App.js",["28"],[],"import './App.css';\nimport { BrowserRouter, Routes, Route, Link } from 'react-router-dom';\nimport Home from './Home';\nimport NavbarTop from './NavbarTop';\nimport Players from './Players';\nimport Teams from './Teams';\nimport Team from './Team';\nimport { useEffect, useState } from 'react';\nimport { ping } from './API';\nimport Offline from './Offline';\n// import { Nav } from 'react-bootstrap';\nfunction App() {\n  const [serverOnline, setServerOnline] = useState(undefined)\n  useEffect(() => {\n    try {\n    ping().then(status => setServerOnline(status));\n    } catch {\n       setServerOnline(false);\n    }\n    console.log(ping())\n  }, [])\n  \n  return (\n    <div>\n      <NavbarTop />\n      <BrowserRouter>\n    {serverOnline !== undefined && (<Routes>\n    {serverOnline ? \n          <>\n            <Route path='/teams/:id' element={<Team />} />\n            <Route path='/teams' element={<Teams />} />\n            <Route path='/players' element={<Players />} />\n            <Route path='/' element={<Home />} />\n        </>\n          : <Route path='*' element={<Offline />}></Route>}\n        </Routes> )}\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/ryantanenholz/Desktop/ArcZero/frontend/src/Offline.js",[],[],"/Users/ryantanenholz/Desktop/ArcZero/frontend/src/Team.js",["29","30"],[],"import React, { useEffect, useState } from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport { getTeamFromUUID } from './API';\nimport PlayerPlate from './PlayerPlate';\nimport './Teams.css';\nfunction Team() {\n  const { id } = useParams();\n  const [teamData, setTeamData] = useState(undefined);\n  useEffect(() => {\n    getTeamFromUUID(id).then((out) => setTeamData(out));\n  }, []);\n\n  return (\n    <Container className='gen-page text-light m-2' fluid>\n      <Container>\n        <Row>\n          {teamData && (\n            <Col\n              className=' '\n              md={12}\n              style={{\n                borderBottom: `solid 0.25rem ${teamData.branding.primary}`,\n              }}\n            >\n              <div className='teambar'>\n              {teamData && <img className='teambar-img' src={teamData.branding.logo} height={300} />}\n                <div className='teambar-h1'>{teamData && teamData.name}</div>\n                \n      \n               \n                </div>\n                <Row className='teambottombar'>\n                <Col md={4} className='teambar-h2 right-text'>\n                {teamData &&\n                 'S' + teamData.season }\n                 </Col >\n                 <Col  md={4} className='teambar-h2'>\n                 {teamData &&\n                  teamData.league }\n         \n                 </Col>\n                 <Col  md={4} className='teambar-h2 left-text'>\n                {teamData &&\n                  teamData.division }\n                 </Col>\n                 </Row>\n            </Col>\n          )}\n          <Col md={12}>\n            <p />\n            <h3>Roster</h3>\n            {teamData && <PlayerPlate playerData={teamData.roster} />}\n          </Col>\n          <Col md={12}>\n            <p />\n            <h3>Staff</h3>\n            {teamData && teamData.staff !== undefined && (\n              <PlayerPlate playerData={teamData.staff} />\n            )}\n          </Col>\n        </Row>\n      </Container>\n    </Container>\n  );\n}\n\nexport default Team;\n",{"ruleId":"31","severity":1,"message":"32","line":10,"column":11,"nodeType":"33","messageId":"34","endLine":10,"endColumn":15},{"ruleId":"35","severity":1,"message":"36","line":16,"column":3,"nodeType":"37","messageId":"38","endLine":16,"endColumn":15},{"ruleId":"31","severity":1,"message":"39","line":2,"column":40,"nodeType":"33","messageId":"34","endLine":2,"endColumn":44},{"ruleId":"40","severity":1,"message":"41","line":12,"column":6,"nodeType":"42","endLine":12,"endColumn":8,"suggestions":"43"},{"ruleId":"44","severity":1,"message":"45","line":27,"column":28,"nodeType":"46","endLine":27,"endColumn":101},"no-unused-vars","'json' is assigned a value but never used.","Identifier","unusedVar","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["47"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"48","fix":"49"},"Update the dependencies array to be: [id]",{"range":"50","text":"51"},[442,444],"[id]"]