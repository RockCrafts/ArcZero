{"ast":null,"code":"function API() {\n  const APIBASE = 'localhost:3001';\n\n  const fetchTeams = async () => {\n    const response = await fetch(APIBASE + '/teams');\n    const json = await response.json();\n    return json;\n  };\n\n  const getTeamByLeague = async () => {\n    const data = await fetchTeams();\n    let teamByLeague = {};\n    data.forEach(element => {\n      const prop = element.league + ' season ' + element.season;\n\n      if (teamByLeague.hasOwnProperty(prop)) {\n        teamByLeague[prop].push(element);\n      } else {\n        teamByLeague[prop] = [element];\n      }\n    });\n    return teamByLeague;\n  };\n}\n\n_c = API;\nexport default API;\n\nvar _c;\n\n$RefreshReg$(_c, \"API\");","map":{"version":3,"sources":["C:/Users/ryant/Desktop/NodeJs/Arch0/frontend/src/API.js"],"names":["API","APIBASE","fetchTeams","response","fetch","json","getTeamByLeague","data","teamByLeague","forEach","element","prop","league","season","hasOwnProperty","push"],"mappings":"AAAA,SAASA,GAAT,GAAe;AACb,QAAMC,OAAO,GAAG,gBAAhB;;AACA,QAAMC,UAAU,GAAG,YAAY;AAC7B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,GAAG,QAAX,CAA5B;AACA,UAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACA,WAAOA,IAAP;AACD,GAJD;;AAKA,QAAMC,eAAe,GAAG,YAAY;AAClC,UAAMC,IAAI,GAAG,MAAML,UAAU,EAA7B;AACA,QAAIM,YAAY,GAAG,EAAnB;AACAD,IAAAA,IAAI,CAACE,OAAL,CAAcC,OAAD,IAAa;AACxB,YAAMC,IAAI,GAAGD,OAAO,CAACE,MAAR,GAAiB,UAAjB,GAA8BF,OAAO,CAACG,MAAnD;;AACA,UAAIL,YAAY,CAACM,cAAb,CAA4BH,IAA5B,CAAJ,EAAuC;AACrCH,QAAAA,YAAY,CAACG,IAAD,CAAZ,CAAmBI,IAAnB,CAAwBL,OAAxB;AACD,OAFD,MAEO;AACLF,QAAAA,YAAY,CAACG,IAAD,CAAZ,GAAqB,CAACD,OAAD,CAArB;AACD;AACF,KAPD;AAQA,WAAOF,YAAP;AACD,GAZD;AAaD;;KApBQR,G;AAsBT,eAAeA,GAAf","sourcesContent":["function API() {\r\n  const APIBASE = 'localhost:3001';\r\n  const fetchTeams = async () => {\r\n    const response = await fetch(APIBASE + '/teams');\r\n    const json = await response.json();\r\n    return json;\r\n  };\r\n  const getTeamByLeague = async () => {\r\n    const data = await fetchTeams();\r\n    let teamByLeague = {};\r\n    data.forEach((element) => {\r\n      const prop = element.league + ' season ' + element.season;\r\n      if (teamByLeague.hasOwnProperty(prop)) {\r\n        teamByLeague[prop].push(element);\r\n      } else {\r\n        teamByLeague[prop] = [element];\r\n      }\r\n    });\r\n    return teamByLeague;\r\n  };\r\n}\r\n\r\nexport default API;\r\n"]},"metadata":{},"sourceType":"module"}